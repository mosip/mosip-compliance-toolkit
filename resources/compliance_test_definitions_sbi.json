[
	{
		"testCaseType": "SBI",
		"testName": "Discover device",
		"testId": "SBI1000",
		"specVersion": "0.9.5",
		"testDescription": "Test to perform validation for the device discovery interface",
		"isNegativeTestcase": false,
		"methodName": [
			"device"
		],
		"requestSchema": [
			"DiscoverRequestSchema"
		],
		"responseSchema": [
			"DiscoverResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Device Info",
		"testId": "SBI1001",
		"specVersion": "0.9.5",
		"testDescription": "Test to perform validation for the device info interface",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap",
		"testId": "SBI1002",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - One Exception",
		"testId": "SBI1003",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Left Slap Fingerprints with one missing finger<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your left slap on the device except the left ring finger until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Left Slap Fingerprints with one missing finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left slap on the device except the left ring finger until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftLittle"
			],
			"exceptions": [
				"LeftRing"
			],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap",
		"testId": "SBI1004",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Two Exception",
		"testId": "SBI1005",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Right Slap Fingerprints with two missing fingers<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your right slap on the device except the right index and middle finger until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Right Slap Fingerprints with two missing fingers<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device except the right index and middle finger until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightRing",
				"RightLittle"
			],
			"exceptions": [
				"RightIndex",
				"RightMiddle"
			],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs",
		"testId": "SBI1006",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Thumbs<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your thumbs on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Thumbs<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your thumbs on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - One Exception",
		"testId": "SBI1007",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Thumbs with one missing thumb<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place only the right thumb on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Thumbs with one missing thumb<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place only the right thumb on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb"
			],
			"exceptions": [
				"LeftThumb"
			],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Both Exception",
		"testId": "SBI1008",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Thumbs when both the thumbs are missing<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not press any finger or thumb on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Thumbs when both the thumbs are missing<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not press any finger or thumb on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [
				"RightThumb",
				"LeftThumb"
			],
			"requestedScore": "40",
			"bioCount": "0",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris",
		"testId": "SBI1009",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - One Exception",
		"testId": "SBI1010",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for iris with one missing iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place only the right iris on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for iris with one missing iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place only the right iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Right"
			],
			"exceptions": [
				"Left"
			],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Both Exception",
		"testId": "SBI1011",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for iris when both iris are missing<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place any iris on the device during capture",
		"androidTestDescription": "Test to validate RCapture interface for iris when both iris are missing<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place any iris on the device during capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [
				"Left",
				"Right"
			],
			"requestedScore": "40",
			"bioCount": "0",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face",
		"testId": "SBI1012",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo",
		"testId": "SBI1013",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for exception photo<br>Steps:<br><br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Raise your hands during capture",
		"androidTestDescription": "Test to validate RCapture interface for exception photo<br>Steps:<br><br>1. Click on Inititate Capture button to start the capture <br>2. Raise your hands during capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "10",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face",
		"testId": "SBI1014",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris",
		"testId": "SBI1015",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for a single iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Left Iris",
		"testId": "SBI1016",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for left iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Right Iris",
		"testId": "SBI1017",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for right iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger",
		"testId": "SBI1018",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Two Unknown Finger",
		"testId": "SBI1019",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for two fingers<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place two fingers, one by one on the fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN",
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - LeftIndex Finger",
		"testId": "SBI1020",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for left index finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left index finger on the fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Two Finger",
		"testId": "SBI1021",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for two fingers<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place two fingers, one by one on the fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Key Rotation - Left Slap",
		"testId": "SBI1022",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Left Iris - Key Rotation",
		"testId": "SBI1023",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Key Rotation - LeftIndex Finger",
		"testId": "SBI1024",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Key Rotation",
		"testId": "SBI1025",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Ready",
		"testId": "SBI1026",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Device Info interface for a device that is in Ready state<br>Steps:<br>1. Make sure the device placed is in Ready state",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Busy",
		"testId": "SBI1027",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate if the device is in Busy state<br>Steps:<br>1. Make the device is in <b>busy</b> state<br>2. Click on <b>Resume</b> button<br>3. After test execution is done, make the device status as <b>ready</b> and click on <b>Resume Next</b> button",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoBusyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"resumeBtn": true,
			"resumeAgainBtn": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Not Ready",
		"testId": "SBI1028",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate if the device is in Not Ready state<br>Steps:<br>1. <b>Disconnect</b> the device<br>2. Click on <b>Resume</b> button<br>3. After test execution is done, <b>re-connect</b> the device and click on <b>Resume Next</b> button",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoNotReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"resumeBtn": true,
			"resumeAgainBtn": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Not Registered",
		"testId": "SBI1029",
		"specVersion": "0.9.5",
		"testDescription": "Verify the response of a Not Registered device.<br>Steps:<br>1. Make sure that you are testing with a <b>Not Registered</b> device<br>2. Click on <b>Resume</b> button<br>3. After test execution is done, <b>register</b> the device and click on <b>Resume Next</b> button",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoNotRegisteredResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"resumeBtn": true,
			"resumeAgainBtn": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Fingerprint - Bio Count Mismatch",
		"testId": "SBI1030",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for auth fingerprint device<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your finger on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "11",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Iris - Bio Count Mismatch",
		"testId": "SBI1031",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for auth iris device<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Bio Count Mismatch",
		"testId": "SBI1032",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for face<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Bio Count Mismatch",
		"testId": "SBI1033",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration left slap<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your left slap and miss one or two fingers on the slap scanner until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration left slap<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left slap and miss one or two fingers on the slap scanner until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "5",
			"deviceSubId": "1",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Bio Count Mismatch",
		"testId": "SBI1034",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration right slap<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your right slap and miss one or two fingers on the slap scanner until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration right slap<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap and miss one or two fingers on the slap scanner until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "5",
			"deviceSubId": "2",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Bio Count Mismatch",
		"testId": "SBI1035",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration thumbs<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your any one thumb on the slap scanner until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration thumbs<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your any one thumb on the slap scanner until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "3",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left iris - Bio Count Mismatch",
		"testId": "SBI1036",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration left iris<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your left iris on the device until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration left iris<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "1",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Iris - Bio Count Mismatch",
		"testId": "SBI1037",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration right iris<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your right iris on the device until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration right iris<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "2",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Both Iris - Bio Count Mismatch",
		"testId": "SBI1038",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration both iris<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration both iris<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "3",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Bio Count Mismatch",
		"testId": "SBI1039",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate bio count mismatch for registration face<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate bio count mismatch for registration both iris<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Timeout (without any input)",
		"testId": "SBI1040",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate face timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your face infront of the camera and wait for capture to timeout",
		"androidTestDescription": "Test to validate face timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your face infront of the camera and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Timeout (without any input)",
		"testId": "SBI1041",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate iris timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your iris on the iris scanner and wait for capture to timeout",
		"androidTestDescription": "Test to validate iris timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your iris on the iris scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Timeout (without any input)",
		"testId": "SBI1042",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate left slap timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"androidTestDescription": "Test to validate left slap timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Timeout (without any input)",
		"testId": "SBI1043",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate right slap timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"androidTestDescription": "Test to validate right slap timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Timeout (without any input)",
		"testId": "SBI1044",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate thumb timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"androidTestDescription": "Test to validate thumb timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your fingers on the slap scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo - Timeout (without any input)",
		"testId": "SBI1045",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate exception photo timeout<br><br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Do not place your face infront of the camera and wait for capture to timeout",
		"androidTestDescription": "Test to validate exception photo timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your face infront of the camera and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "10",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Timeout (without any input)",
		"testId": "SBI1046",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate face timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Do not place your face infront of the camera and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris - Timeout (without any input)",
		"testId": "SBI1047",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate iris timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Donot place your iris on ths iris scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - Timeout (without any input)",
		"testId": "SBI1048",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate finger timeout<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Donot place your finger on the finger scanner and wait for capture to timeout",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Timeout (with user input)",
		"testId": "SBI1049",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for registration capture request for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera and wait for capture",
		"androidTestDescription": "Timeout Capture validation for registration capture request for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera and wait for capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Timeout (with user input)",
		"testId": "SBI1050",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for registration capture request for double iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your iris infront of the camera and wait for capture",
		"androidTestDescription": "Timeout Capture validation for registration capture request for double iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your iris infront of the camera and wait for capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Timeout (with user input)",
		"testId": "SBI1051",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for registration capture request for Left Slap<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your left slap on device and wait for capture",
		"androidTestDescription": "Timeout Capture validation for registration capture request for Left Slap<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left slap on device and wait for capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "4",
			"deviceSubId": "1",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Timeout (with user input)",
		"testId": "SBI1052",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for registration capture request for Right Slap<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your right slap on device and wait for capture",
		"androidTestDescription": "Timeout Capture validation for registration capture request for Right Slap<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on device and wait for capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "4",
			"deviceSubId": "2",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Timeout (with user input)",
		"testId": "SBI1053",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for registration capture request for Two Thumbs<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your two thumbs on device and wait for capture",
		"androidTestDescription": "Timeout Capture validation for registration capture request for Two Thumbs<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your two thumbs on device and wait for capture",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo - Timeout (with user input)",
		"testId": "SBI1054",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for Face device type exception value left little finger or any will give Exception photo ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "100",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Timeout (with user input)",
		"testId": "SBI1055",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for Auth capture Request only for Face",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris - Timeout (with user input)",
		"testId": "SBI1056",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for Auth capture Request for Unknown iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - Timeout (with user input)",
		"testId": "SBI1057",
		"specVersion": "0.9.5",
		"testDescription": "Timeout Capture validation for Auth capture Request for Unknown Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - 10 Fingers",
		"testId": "SBI1058",
		"specVersion": "0.9.5",
		"testDescription": "Test to perform Auth capture for 10 Fingers",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle",
				"LeftThumb",
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle",
				"RightThumb"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "10",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - 2 Iris",
		"testId": "SBI1059",
		"specVersion": "0.9.5",
		"testDescription": "Test to perform Auth capture for 2 Iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "100",
			"bioCount": "2",
			"deviceSubId": "0",
			"timeout": "10000"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Key Rotation - Face",
		"testId": "SBI1060",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Key Rotation - Double Iris",
		"testId": "SBI1061",
		"specVersion": "0.9.5",
		"testDescription": "Test for device key rotation<br>Steps:<br>1. Current device key information has been saved.<br>2. Rotate the device key in the SBI and click on <b>Continue</b> button,<br> 3. <i>Repeat step 2</i> as many times as setup in project configuration.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Validator to validate the device key rotation"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"keyRotationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - ISO Standard Validations (ISO19794-4:2011)",
		"testId": "SBI1062",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - ISO Standard Validations (ISO19794-4:2011)",
		"testId": "SBI1063",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - ISO Standard Validations (ISO19794-6:2011)",
		"testId": "SBI1064",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - ISO Standard Validations (ISO19794-5:2011)",
		"testId": "SBI1065",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - ISO Standard Validations (ISO19794-5:2011)",
		"testId": "SBI1066",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Left Iris - ISO Standard Validations (ISO19794-6:2011)",
		"testId": "SBI1067",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture interface for left iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Right Iris - ISO Standard Validations (ISO19794-6:2011)",
		"testId": "SBI1068",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture interface for right iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - ISO Standard Validations (ISO19794-4:2011)",
		"testId": "SBI1069",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture interface for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "ISOStandardsValidator",
					"description": "Validates that the 'bioValue' is as per the defined ISO standards."
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Streaming test with Registration capture - Left Slap",
		"testId": "SBI1070",
		"specVersion": "0.9.5",
		"testDescription": "Streaming Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Streaming Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Streaming test with Registration capture - Right Slap",
		"testId": "SBI1071",
		"specVersion": "0.9.5",
		"testDescription": "Streaming Test to validate the RCapture interface for Right Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your Right slap on the device until the capture completes",
		"androidTestDescription": "Streaming Test to validate the RCapture interface for Right Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your Right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Streaming test with Registration capture - Two Thumbs",
		"testId": "SBI1072",
		"specVersion": "0.9.5",
		"testDescription": "Streaming Test to validate the RCapture interface for Two Thumbs<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place both your thumbs on the device until the capture completes",
		"androidTestDescription": "Streaming Test to validate the RCapture interface for Two Thumbs<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place both your thumbs on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Streaming test with Registration capture - Double Iris",
		"testId": "SBI1073",
		"specVersion": "0.9.5",
		"testDescription": "Streaming Test to validate the RCapture interface for Two Iris<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Streaming Test to validate the RCapture interface for Two Iris<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Streaming test with Registration capture - Face",
		"testId": "SBI1074",
		"specVersion": "0.9.5",
		"testDescription": "Streaming Test to validate the RCapture interface for face<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Streaming Test to validate the RCapture interface for face<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Registration capture - Left Slap",
		"testId": "SBI1075",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for left slap fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for left slap fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Registration capture - Right Slap",
		"testId": "SBI1076",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for right slap fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for right slap fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Registration capture - Double Iris",
		"testId": "SBI1077",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for both iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for both iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Registration capture - Face",
		"testId": "SBI1078",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Quality Check Test to validate the biometrics captured by RCapture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Auth capture - Face",
		"testId": "SBI1079",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by Capture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Auth capture - Single Iris - Left Iris",
		"testId": "SBI1080",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by Capture interface for left iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Auth capture - Single Iris - Right Iris",
		"testId": "SBI1081",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by Capture interface for right iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Biometrics Quality Check for Auth capture - Unknown Finger",
		"testId": "SBI1082",
		"specVersion": "0.9.5",
		"testDescription": "Quality Check Test to validate the biometrics captured by Capture interface for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Registration capture - Left Slap",
		"testId": "SBI1083",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by RCapture interface for left slap fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate the timestamp captured by RCapture interface for left slap fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Registration capture - Right Slap",
		"testId": "SBI1084",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by RCapture interface for right slap fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate the timestamp captured by RCapture interface for right slap fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Registration capture - Double Iris",
		"testId": "SBI1085",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by RCapture interface for both iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate the timestamp captured by RCapture interface for both iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Registration capture - Face",
		"testId": "SBI1086",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by RCapture interface for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate the timestamp captured by RCapture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Auth capture - Face",
		"testId": "SBI1087",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by Capture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Auth capture - Single Iris - Left Iris",
		"testId": "SBI1088",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by Capture interface for left iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Auth capture - Single Iris - Right Iris",
		"testId": "SBI1089",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by Capture interface for right iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Time Check for Auth capture - Unknown Finger",
		"testId": "SBI1090",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the timestamp captured by Capture interface for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "TimeCheckValidator",
					"description": "Validates if response is received within the given timestamp interval or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Invalid Transaction Id",
		"testId": "SBI1091",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of Capture method for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": true,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"transactionId": "SBI1094-635656783454765675346546526738495712345617645373336644"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Left Iris - Invalid Transaction Id",
		"testId": "SBI1092",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of Capture method for left iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner",
		"isNegativeTestcase": true,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"transactionId": "SBI1095-8765432112345678128734658765432101133558833"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - Invalid Transaction Id",
		"testId": "SBI1093",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of Capture method for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": true,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"transactionId": "SBI1096-32165678345476567534654652673849571234561764537333664789"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Invalid Request Json (wrong attribute name envXXX)",
		"testId": "SBI1094",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"invalidRequestAttribute": "env"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Invalid Request Json (wrong attribute name timeoutXXX)",
		"testId": "SBI1095",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for Right Slap Fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for Right Slap Fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"invalidRequestAttribute": "timeout"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Invalid Request Json (wrong attribute name specVersionXXX)",
		"testId": "SBI1096",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for Two Thumbs<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your thumbs on the device until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for Two Thumbs<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your thumbs on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"invalidRequestAttribute": "specVersion"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Invalid Request Json (wrong attribute name purposeXXX)",
		"testId": "SBI1097",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for Two Iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for Two Iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"invalidRequestAttribute": "purpose"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Invalid Request Json (wrong attribute name bioXXX)",
		"testId": "SBI1098",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"invalidRequestAttribute": "bio"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - One Exception - Invalid Request Json (wrong attribute name countXXX)",
		"testId": "SBI1099",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for iris with one missing iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place only the right iris on the device until the capture completes",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for iris with one missing iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place only the right iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Right"
			],
			"exceptions": [
				"Left"
			],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "3",
			"invalidRequestAttribute": "bio[0].count"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo - Invalid Request Json (wrong attribute name deviceSubIdXXX)",
		"testId": "SBI1100",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate invalid request json in RCapture method for exception photo<br>Steps:<br><br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Raise your hands during capture",
		"androidTestDescription": "Test to validate invalid request json in RCapture method for exception photo<br>Steps:<br><br>1. Click on Inititate Capture button to start the capture <br>2. Raise your hands during capture",
		"isNegativeTestcase": false,
		"inactiveForAndroid": "yes",
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureInvalidRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "10",
			"bioCount": "1",
			"deviceSubId": "0",
			"invalidRequestAttribute": "bio[0].deviceSubId"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Hash Validations",
		"testId": "SBI1101",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate the RCapture interface for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Hash Validations",
		"testId": "SBI1102",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Hash Validations",
		"testId": "SBI1103",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Right Slap Fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris- Hash Validations",
		"testId": "SBI1104",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate RCapture interface for Two Iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Hash Validations",
		"testId": "SBI1105",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris - Hash Validations",
		"testId": "SBI1106",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for a single iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your iris infront of the iris scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - Hash Validations",
		"testId": "SBI1107",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate Capture method for a finger<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "HashValidator",
					"description": "Validates the 'hash value' received in the response matches 'previous hash' in request"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"hashValidationTestCase": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Invalid Transaction Id",
		"testId": "SBI1108",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of RCapture method for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes",
		"androidTestDescription": "Test to validate transactionId of RCapture method for Left Slap Fingerprints<br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes",
		"isNegativeTestcase": true,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorRCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"transactionId": "SBI1112-987654783454765675346546526738495712345617645373336644"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Invalid Transaction Id",
		"testId": "SBI1109",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of RCapture method for Right Slap Fingerprints<br>Steps:<br>1. Click on Start Streaming button.<br>3. Once streaming is done, click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"androidTestDescription": "Test to validate transactionId of RCapture method for Right Slap Fingerprints<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right slap on the device until the capture completes",
		"isNegativeTestcase": true,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorRCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"transactionId": "SBI1113-234654783454765675346546526738495712345617645432198765"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Invalid Transaction Id",
		"testId": "SBI1110",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of RCapture method for Two Iris<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes",
		"androidTestDescription": "Test to validate transactionId of RCapture method for Two Iris<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes",
		"isNegativeTestcase": true,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorRCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"transactionId": "SBI1114-567891234554765675346546526738495712345617645432198123"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Invalid Transaction Id",
		"testId": "SBI1111",
		"specVersion": "0.9.5",
		"testDescription": "Test to validate transactionId of RCapture method for face<br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes",
		"androidTestDescription": "Test to validate transactionId of RCapture method for face<br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes",
		"isNegativeTestcase": true,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"TransactionIdErrorRCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"transactionId": "SBI1115-456891234554765675346546526738495712345617645432198321"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Males - child(5-12) - 10 persons",
		"testId": "SBI1112",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - child(5-12) - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - child(5-12) - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Females - child(5-12) - 10 persons",
		"testId": "SBI1113",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - child(5-12) - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - child(5-12) - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Males - adult(12-40) - labourer - 10 persons",
		"testId": "SBI1114",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - adult(12-40) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - adult(12-40) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Males - adult(12-40) - non labourer - 10 persons",
		"testId": "SBI1115",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - adult(12-40) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - adult(12-40) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"occupation": "non-labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Females - adult(12-40) - labourer - 10 persons",
		"testId": "SBI1116",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - adult(12-40) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - adult(12-40) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Females - adult(12-40) - non labourer - 10 persons",
		"testId": "SBI1117",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Females - adult(12-40) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Females - adult(12-40) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"occupation": "non-labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Males - mature(40-59) - labourer - 10 persons",
		"testId": "SBI1118",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Males - mature(40-59) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Males - mature(40-59) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Males - mature(40-59) - non labourer - 10 persons",
		"testId": "SBI1119",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - mature(40-59) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - mature(40-59) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-50)",
			"gender": "male",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Females - mature(40-59) - labourer - 10 persons",
		"testId": "SBI1120",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - mature(40-59) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - mature(40-59) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Females - mature(40-59) - non labourer - 10 persons",
		"testId": "SBI1121",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Females - mature(40-59) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Females - mature(40-59) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-50)",
			"gender": "female",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Males - senior(60+) - labourer - 10 persons",
		"testId": "SBI1122",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Males - senior(60+) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Males - senior(60+) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Left Slap - Males - senior(60+) - non labourer - 10 persons",
		"testId": "SBI1123",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - senior(60+) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your left slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for left slap fingerprints for - Males - senior(60+) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your left slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Females - senior(60+) - labourer - 10 persons",
		"testId": "SBI1124",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - senior(60+) - labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - senior(60+) - labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Right Slap - Females - senior(60+) - non labourer - 10 persons",
		"testId": "SBI1125",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - senior(60+) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Start Streaming button. <br>2. Once streaming is done, click on Inititate Capture button to start the capture.  <br> 3. Place your right slap on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase validate the biometrics captured by RCapture interface for right slap fingerprints for - Females - senior(60+) - non labourer - 10 persons <br><br>Steps:<br>1. Click on Inititate Capture button to start the capture.  <br> 2. Place your right slap on the device until the capture completes<br> 3. Repeat above steps, for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - child(5-12) - african - 10 persons",
		"testId": "SBI1126",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - child(5-12) - african - 10 persons",
		"testId": "SBI1127",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - child(5-12) - european - 10 persons",
		"testId": "SBI1128",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - child(5-12) - european - 10 persons",
		"testId": "SBI1129",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - child(5-12) - asian - 10 persons",
		"testId": "SBI1130",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - child(5-12) - asian - 10 persons",
		"testId": "SBI1131",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - adult(12-40) - african - 10 persons",
		"testId": "SBI1132",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - adult(12-40) - african - 10 persons",
		"testId": "SBI1133",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - adult(12-40) - european - 10 persons",
		"testId": "SBI1134",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - adult(12-40) - european - 10 persons",
		"testId": "SBI1135",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - adult(12-40) - asian - 10 persons",
		"testId": "SBI1136",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - adult(12-40) - asian - 10 persons",
		"testId": "SBI1137",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - mature(40-59) - african - 10 persons",
		"testId": "SBI1138",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - mature(40-59) - african - 10 persons",
		"testId": "SBI1139",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - mature(40-59) - european - 10 persons",
		"testId": "SBI1140",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - mature(40-59) - european - 10 persons",
		"testId": "SBI1141",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - mature(40-59) - asian - 10 persons",
		"testId": "SBI1142",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - mature(40-59) - asian - 10 persons",
		"testId": "SBI1143",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - senior(60+) - african - 10 persons",
		"testId": "SBI1144",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - senior(60+) - african - 10 persons",
		"testId": "SBI1145",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - senior(60+) - european - 10 persons",
		"testId": "SBI1146",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - senior(60+) - european - 10 persons",
		"testId": "SBI1147",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Males - senior(60+) - asian - 10 persons",
		"testId": "SBI1148",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Males - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Face - Females - senior(60+) - asian - 10 persons",
		"testId": "SBI1149",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place your face infront of the camera until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for face for - Females - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Double Iris - child(5-12) - 10 persons",
		"testId": "SBI1150",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - child(5-12) - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - child(5-12) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Double Iris - adult(12-40) - 10 persons",
		"testId": "SBI1151",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - adult(12-40) - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - adult(12-40) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Double Iris - mature(40-59) - 10 persons",
		"testId": "SBI1152",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - mature(40-59) - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - mature(40-59) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Registration capture - Double Iris - senior(60+) - 10 persons",
		"testId": "SBI1153",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - senior(60+) - 10 persons <br>Steps:<br>1. Click on Start Streaming button.<br>2. Once streaming is done, click on Inititate Capture button to start the capture <br>3. Place both your iris on the device until the capture completes<br> 4. Repeat above steps , for next person, after clicking on Continue button.",
		"androidTestDescription": "Quality Assessment Testcase to validate the biometrics captured by RCapture interface for Two Iris for - senior(60+) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place both your iris on the device until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - child(5-12) - 10 persons",
		"testId": "SBI1154",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - child(5-12) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - child(5-12) - 10 persons",
		"testId": "SBI1155",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - child(5-12) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - adult(12-40) - labourer - 10 persons",
		"testId": "SBI1156",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - adult(12-40) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - adult(12-40) - non labourer - 10 persons",
		"testId": "SBI1157",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - adult(12-40) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - adult(12-40) - labourer - 10 persons",
		"testId": "SBI1158",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - adult(12-40) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - adult(12-40) - non labourer - 10 persons",
		"testId": "SBI1159",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - adult(12-40) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - mature(40-59) - labourer - 10 persons",
		"testId": "SBI1160",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - mature(40-59) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - mature(40-59) - non labourer - 10 persons",
		"testId": "SBI1161",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - mature(40-59) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - mature(40-59) - labourer - 10 persons",
		"testId": "SBI1162",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - mature(40-59) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - mature(40-59) - non labourer - 10 persons",
		"testId": "SBI1163",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - mature(40-59) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - senior(60+) - labourer - 10 persons",
		"testId": "SBI1164",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - senior(60+) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Males - senior(60+) - non labourer - 10 persons",
		"testId": "SBI1165",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Males - senior(60+) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - senior(60+) - labourer - 10 persons",
		"testId": "SBI1166",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - senior(60+) - labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"occupation": "labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Unknown Finger - Females - senior(60+) - non labourer - 10 persons",
		"testId": "SBI1167",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for finger for - Females - senior(60+) - non labourer - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place one of your finger on the single fingerprint scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"occupation": "non labourer",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - child(5-12) - african - 10 persons",
		"testId": "SBI1168",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - child(5-12) - african - 10 persons",
		"testId": "SBI1169",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - child(5-12) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - child(5-12) - european - 10 persons",
		"testId": "SBI1170",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - child(5-12) - european - 10 persons",
		"testId": "SBI1171",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - child(5-12) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - child(5-12) - asian - 10 persons",
		"testId": "SBI1172",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - child(5-12) - asian - 10 persons",
		"testId": "SBI1173",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - child(5-12) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - adult(12-40) - african - 10 persons",
		"testId": "SBI1174",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - adult(12-40) - african - 10 persons",
		"testId": "SBI1175",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - adult(12-40) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - adult(12-40) - european - 10 persons",
		"testId": "SBI1176",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - adult(12-40) - european - 10 persons",
		"testId": "SBI1177",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - adult(12-40) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - adult(12-40) - asian - 10 persons",
		"testId": "SBI1178",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - adult(12-40) - asian - 10 persons",
		"testId": "SBI1179",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - adult(12-40) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - mature(40-59) - african - 10 persons",
		"testId": "SBI1180",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - mature(40-59) - african - 10 persons",
		"testId": "SBI1181",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - mature(40-59) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - mature(40-59) - european - 10 persons",
		"testId": "SBI1182",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - mature(40-59) - european - 10 persons",
		"testId": "SBI1183",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - mature(40-59) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - mature(40-59) - asian - 10 persons",
		"testId": "SBI1184",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - mature(40-59) - asian - 10 persons",
		"testId": "SBI1185",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - mature(40-59) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - senior(60+) - african - 10 persons",
		"testId": "SBI1186",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - senior(60+) - african - 10 persons",
		"testId": "SBI1187",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - senior(60+) - african - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "african",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - senior(60+) - european - 10 persons",
		"testId": "SBI1188",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - senior(60+) - european - 10 persons",
		"testId": "SBI1189",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - senior(60+) - european - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "european",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Males - senior(60+) - asian - 10 persons",
		"testId": "SBI1190",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Males - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "male",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Face - Females - senior(60+) - asian - 10 persons",
		"testId": "SBI1191",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for face for - Females - senior(60+) - asian - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your face infront of the camera until the capture completes<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"gender": "female",
			"race": "asian",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Single Iris - Left Iris - child(5-12) - 10 persons",
		"testId": "SBI1192",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for left iris for - child(5-12) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "child(5-12)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Single Iris - Right Iris - adult(12-40) - 10 persons",
		"testId": "SBI1193",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for right iris for - adult(12-40) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "adult(12-40)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Single Iris - Left Iris - mature(40-59) - 10 persons",
		"testId": "SBI1194",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for left iris for - mature(40-59) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your left iris infront of the iris scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "mature(40-59)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Quality Assessment for Auth capture - Single Iris - Right Iris - senior(60+) - 10 persons",
		"testId": "SBI1195",
		"specVersion": "0.9.5",
		"testDescription": "Quality Assessment Testcase to validate the biometrics captured by Capture method for right iris for - senior(60+) - 10 persons <br>Steps:<br>1. Click on Inititate Capture button to start the capture <br>2. Place your right iris infront of the iris scanner<br> 3. Repeat above steps , for next person, after clicking on Continue button.",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				},
				{
					"name": "ResponseMismatchValidator",
					"description": "Validates the response to check if  bioCount, exceptions, segments and transactionId match the ones set in request"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates the response signature"
				},
				{
					"name": "BiometricsQualityCheckValidator",
					"description": "Checks the quality of biometrics using all configured SDK services"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"qualityAssessmentTestCase": true,
			"ageGroup": "senior(60+)",
			"testCaseRepeatCount": "10"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Discover device - Invalid Biometric Types",
		"testId": "SBI1196",
		"specVersion": "0.9.5",
		"testDescription": "Test to perform validation for the device discovery interface with invalid request",
		"isNegativeTestcase": true,
		"methodName": [
			"device"
		],
		"requestSchema": [
			"InvalidDiscoverRequestSchema"
		],
		"responseSchema": [
			"DiscoverResponseErrorSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates the response for mandatory attributes and correct values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"invalidRequestAttribute": "biometricTypes"
		}
	}
]